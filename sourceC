#include <stdio.h>
#include <sys\\_kefile.h>
#include <string.h>
#include <stdlib.h>
#include <_xeprint.h>

/*
 * fgets -- reads a line from a file
 */
char *fgets(char *str, int num, FILE *stream) {
    if (!stream || num <= 0) return NULL;
    int i;
    for (i = 0; i < num - 1; i++) {
        char ch;
        if (fread(&ch, 1, 1, stream) == 0) {
            break;
        }
        str[i] = ch;
        if (ch == '\n') break;
    }
    str[i] = '\0';
    return (i == 0) ? NULL : str;
}

/*
 * feof -- checks if end of file has been reached
 */
int feof(FILE *stream) {
    if (!stream) return 1;
    long current_pos = ftell(stream);
    fseek(stream, 0, SEEK_END);
    long end_pos = ftell(stream);
    fseek(stream, current_pos, SEEK_SET);
    return (current_pos >= end_pos);
}

/*
 * fprintf -- formatted file output
 */
int fprintf(FILE *stream, const char *format, ...) {
    va_list args;
    va_start(args, format);
    char buffer[512];
    int length = vsnprintf(buffer, sizeof(buffer), format, args);
    va_end(args);
    if (length > 0) {
        fwrite(buffer, 1, length, stream);
    }
    return length;
}

/*
 * fseek -- moves the file pointer to a specific position
 */
int fseek(FILE *fp, long int offset, int pos) {
    if (!fp) return -1;
    int newPos = 0;
    switch (pos) {
        case SEEK_SET:
            newPos = offset;
            break;
        case SEEK_CUR:
            newPos = fp->curr_pos + offset;
            break;
        case SEEK_END:
            newPos = fp->size + offset;
            break;
        default:
            return -1;
    }
    fp->curr_pos = newPos;
    return _KeFileSetOffset(fp->_file_num, newPos);
}

/*
 * ftell -- gets the current file position
 */
long ftell(FILE *fp) {
    if (!fp) return -1;
    return fp->curr_pos;
}
